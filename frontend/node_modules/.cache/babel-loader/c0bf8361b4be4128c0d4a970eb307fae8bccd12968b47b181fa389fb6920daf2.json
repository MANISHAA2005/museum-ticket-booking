{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\internship\\\\museum-ticket-booking\\\\frontend\\\\src\\\\Pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Chatbot.css\"; // Ensure you have Chatbot.css in the same directory\nimport { FaPaperPlane } from \"react-icons/fa\"; // Import Paper Plane Icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  // Load messages from localStorage or start with a default bot message\n  const [messages, setMessages] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"chatHistory\")) || [{\n      text: \"Hello! How can I assist you?\",\n      sender: \"bot\"\n    }];\n  });\n  const [input, setInput] = useState(\"\");\n\n  // Save chat history to localStorage whenever messages change\n  useEffect(() => {\n    localStorage.setItem(\"chatHistory\", JSON.stringify(messages));\n  }, [messages]);\n  const sendMessage = () => {\n    if (input.trim() === \"\") return;\n\n    // Add user message\n    const newMessages = [...messages, {\n      text: input,\n      sender: \"user\"\n    }];\n    setMessages(newMessages);\n    setInput(\"\");\n\n    // Simulate bot response with a delay\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        text: \"I'm just a bot! ðŸ˜Š How else can I help?\",\n        sender: \"bot\"\n      }]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: \"CHATTIX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && sendMessage() // Send on Enter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"8cqsHsVImfSkxrD1NScfDI9u8Bk=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","FaPaperPlane","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","JSON","parse","localStorage","getItem","text","sender","input","setInput","setItem","stringify","sendMessage","trim","newMessages","setTimeout","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/internship/museum-ticket-booking/frontend/src/Pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Chatbot.css\"; // Ensure you have Chatbot.css in the same directory\r\nimport { FaPaperPlane } from \"react-icons/fa\"; // Import Paper Plane Icon\r\n\r\nconst Chatbot = () => {\r\n  // Load messages from localStorage or start with a default bot message\r\n  const [messages, setMessages] = useState(() => {\r\n    return (\r\n      JSON.parse(localStorage.getItem(\"chatHistory\")) || [\r\n        { text: \"Hello! How can I assist you?\", sender: \"bot\" },\r\n      ]\r\n    );\r\n  });\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  // Save chat history to localStorage whenever messages change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"chatHistory\", JSON.stringify(messages));\r\n  }, [messages]);\r\n\r\n  const sendMessage = () => {\r\n    if (input.trim() === \"\") return;\r\n\r\n    // Add user message\r\n    const newMessages = [...messages, { text: input, sender: \"user\" }];\r\n    setMessages(newMessages);\r\n    setInput(\"\");\r\n\r\n    // Simulate bot response with a delay\r\n    setTimeout(() => {\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { text: \"I'm just a bot! ðŸ˜Š How else can I help?\", sender: \"bot\" },\r\n      ]);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-header\">CHATTIX</div>\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chatbot-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={(e) => e.key === \"Enter\" && sendMessage()} // Send on Enter\r\n        />\r\n        <button onClick={sendMessage}>\r\n          <FaPaperPlane /> {/* Send button with paper plane icon */}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}